/*
 * LogSentinel RESTful API
 * Read more at https://docs.logsentinel.com/en/latest/index.html
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.logsentinel.api;

import com.logsentinel.ApiException;
import com.logsentinel.model.GDPRRegisterRecord;
import com.logsentinel.model.GDPRRegisterRecordDto;
import com.logsentinel.model.GDPRResponsibleEntity;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for GdprRegisterApi
 */
@Ignore
public class GdprRegisterApiTest {

    private final GdprRegisterApi api = new GdprRegisterApi();

    
    /**
     * Adds entitity to the GDPR register
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addEntityTest() throws ApiException {
        GDPRResponsibleEntity request = null;
        UUID response = api.addEntity(request);

        // TODO: test validations
    }
    
    /**
     * Deletes entity in the GDPR register
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteEntityTest() throws ApiException {
        UUID id = null;
        GDPRResponsibleEntity response = api.deleteEntity(id);

        // TODO: test validations
    }
    
    /**
     * Deletes record  from the GDPR register
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteRecordTest() throws ApiException {
        UUID id = null;
        GDPRRegisterRecord response = api.deleteRecord(id);

        // TODO: test validations
    }
    
    /**
     * Fetch entities from the GDPR register
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void gdprEntitiesTest() throws ApiException {
        List<GDPRResponsibleEntity> response = api.gdprEntities();

        // TODO: test validations
    }
    
    /**
     * Gets entity by id from the GDPR register
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getEntityTest() throws ApiException {
        UUID id = null;
        GDPRResponsibleEntity response = api.getEntity(id);

        // TODO: test validations
    }
    
    /**
     * Gets record by id from the GDPR register
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getRecordTest() throws ApiException {
        UUID id = null;
        GDPRRegisterRecord response = api.getRecord(id);

        // TODO: test validations
    }
    
    /**
     * Fetch records from the GDPR register
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getRecordsTest() throws ApiException {
        String role = null;
        List<String> filterTags = null;
        List<GDPRRegisterRecordDto> response = api.getRecords(role, filterTags);

        // TODO: test validations
    }
    
    /**
     * Updates entity in the GDPR register
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void saveEntityTest() throws ApiException {
        GDPRResponsibleEntity request = null;
        UUID response = api.saveEntity(request);

        // TODO: test validations
    }
    
    /**
     * Saves record in the GDPR register
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void saveRecordTest() throws ApiException {
        GDPRRegisterRecord record = null;
        UUID response = api.saveRecord(record);

        // TODO: test validations
    }
    
}
