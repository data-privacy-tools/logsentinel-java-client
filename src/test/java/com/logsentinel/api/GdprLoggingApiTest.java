/*
 * LogSentinel RESTful API
 * Read more at https://docs.logsentinel.com/en/latest/index.html
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.logsentinel.api;

import com.logsentinel.ApiException;
import com.logsentinel.model.Consent;
import com.logsentinel.model.GDPRRequest;
import com.logsentinel.model.LogResponse;
import com.logsentinel.model.Result;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for GdprLoggingApi
 */
@Ignore
public class GdprLoggingApiTest {

    private final GdprLoggingApi api = new GdprLoggingApi();

    
    /**
     * Log the consent by a given user
     *
     * Logs GDPR consent. Include any consent-related data (e.g. data subject ID, data subject names, processing activity or any other details). You can also log consent withdrawal (include \&quot;withdrawal\&quot; in the additional details field). 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void logConsentTest() throws ApiException {
        Consent consent = null;
        String signature = null;
        List<String> encryptedKeywords = null;
        LogResponse response = api.logConsent(consent, signature, encryptedKeywords);

        // TODO: test validations
    }
    
    /**
     * Log a GDPR request by a given user
     *
     * Log a request for data subject rights under GDPR. Include the data subject details as well as any relevant additional details.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void logGdprRequestTest() throws ApiException {
        GDPRRequest gdprRequest = null;
        String requestType = null;
        String signature = null;
        List<String> encryptedKeywords = null;
        LogResponse response = api.logGdprRequest(gdprRequest, requestType, signature, encryptedKeywords);

        // TODO: test validations
    }
    
    /**
     * Push data about the result of a GDPR request
     *
     * Log the result of handling a GDPR request. E.g. after manually reviewing a request for erasure or for data portability, you should log whether the request was approved and executed or not, including the reasons why.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void logRequestResultsTest() throws ApiException {
        String requestType = null;
        Result result = null;
        String signature = null;
        List<String> encryptedKeywords = null;
        LogResponse response = api.logRequestResults(requestType, result, signature, encryptedKeywords);

        // TODO: test validations
    }
    
}
