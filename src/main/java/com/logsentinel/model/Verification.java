/*
 * LogSentinel RESTful API
 * Read more at https://docs.logsentinel.com/en/latest/index.html
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.logsentinel.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.UUID;

/**
 * Verification
 */

public class Verification {
  @JsonProperty("applicationId")
  private UUID applicationId = null;

  @JsonProperty("attemptedHash")
  private String attemptedHash = null;

  @JsonProperty("auditLogEntryId")
  private UUID auditLogEntryId = null;

  @JsonProperty("created")
  private OffsetDateTime created = null;

  /**
   * Gets or Sets failure
   */
  public enum FailureEnum {
    HASH_NOT_FOUND("HASH_NOT_FOUND"),
    
    HASH_MISMATCH("HASH_MISMATCH"),
    
    SEARCH_ENGINE_AND_DB_MISMATCH("SEARCH_ENGINE_AND_DB_MISMATCH"),
    
    MISSING_PREVIOUS_ENTRY("MISSING_PREVIOUS_ENTRY"),
    
    MISSING_DB_ENTRY("MISSING_DB_ENTRY"),
    
    TIMESTAMP_VALIDATION_FAILED("TIMESTAMP_VALIDATION_FAILED"),
    
    TIMESTAMP_GROUP_HASH_MISMATCH("TIMESTAMP_GROUP_HASH_MISMATCH"),
    
    SIGNATURE_MISMATCH("SIGNATURE_MISMATCH"),
    
    MISSING_SIGNATURE("MISSING_SIGNATURE"),
    
    MISSING_PREVIOUS_TIMESTAMP_TOKEN("MISSING_PREVIOUS_TIMESTAMP_TOKEN"),
    
    PREVIOUS_TIMESTAMP_TOKEN_HASH_MISMATCH("PREVIOUS_TIMESTAMP_TOKEN_HASH_MISMATCH"),
    
    TIMESTAMP_GROUP_INVALID("TIMESTAMP_GROUP_INVALID"),
    
    ETHEREUM_STORED_DATA_NOT_FOUND("ETHEREUM_STORED_DATA_NOT_FOUND"),
    
    ETHEREUM_CONSISTENCY_PROOF_FAILED("ETHEREUM_CONSISTENCY_PROOF_FAILED");

    private String value;

    FailureEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static FailureEnum fromValue(String text) {
      for (FailureEnum b : FailureEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("failure")
  private FailureEnum failure = null;

  @JsonProperty("id")
  private UUID id = null;

  /**
   * Gets or Sets type
   */
  public enum TypeEnum {
    MANUAL("MANUAL"),
    
    API_CALL("API_CALL"),
    
    BACKGROUND("BACKGROUND");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("type")
  private TypeEnum type = null;

  public Verification applicationId(UUID applicationId) {
    this.applicationId = applicationId;
    return this;
  }

   /**
   * Get applicationId
   * @return applicationId
  **/
  @ApiModelProperty(value = "")
  public UUID getApplicationId() {
    return applicationId;
  }

  public void setApplicationId(UUID applicationId) {
    this.applicationId = applicationId;
  }

  public Verification attemptedHash(String attemptedHash) {
    this.attemptedHash = attemptedHash;
    return this;
  }

   /**
   * Get attemptedHash
   * @return attemptedHash
  **/
  @ApiModelProperty(value = "")
  public String getAttemptedHash() {
    return attemptedHash;
  }

  public void setAttemptedHash(String attemptedHash) {
    this.attemptedHash = attemptedHash;
  }

  public Verification auditLogEntryId(UUID auditLogEntryId) {
    this.auditLogEntryId = auditLogEntryId;
    return this;
  }

   /**
   * Get auditLogEntryId
   * @return auditLogEntryId
  **/
  @ApiModelProperty(value = "")
  public UUID getAuditLogEntryId() {
    return auditLogEntryId;
  }

  public void setAuditLogEntryId(UUID auditLogEntryId) {
    this.auditLogEntryId = auditLogEntryId;
  }

  public Verification created(OffsetDateTime created) {
    this.created = created;
    return this;
  }

   /**
   * Get created
   * @return created
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getCreated() {
    return created;
  }

  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }

  public Verification failure(FailureEnum failure) {
    this.failure = failure;
    return this;
  }

   /**
   * Get failure
   * @return failure
  **/
  @ApiModelProperty(value = "")
  public FailureEnum getFailure() {
    return failure;
  }

  public void setFailure(FailureEnum failure) {
    this.failure = failure;
  }

  public Verification id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public Verification type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Verification verification = (Verification) o;
    return Objects.equals(this.applicationId, verification.applicationId) &&
        Objects.equals(this.attemptedHash, verification.attemptedHash) &&
        Objects.equals(this.auditLogEntryId, verification.auditLogEntryId) &&
        Objects.equals(this.created, verification.created) &&
        Objects.equals(this.failure, verification.failure) &&
        Objects.equals(this.id, verification.id) &&
        Objects.equals(this.type, verification.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(applicationId, attemptedHash, auditLogEntryId, created, failure, id, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Verification {\n");
    
    sb.append("    applicationId: ").append(toIndentedString(applicationId)).append("\n");
    sb.append("    attemptedHash: ").append(toIndentedString(attemptedHash)).append("\n");
    sb.append("    auditLogEntryId: ").append(toIndentedString(auditLogEntryId)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    failure: ").append(toIndentedString(failure)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

